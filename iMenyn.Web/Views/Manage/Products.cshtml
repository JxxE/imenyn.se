@{
    ViewBag.Title = "Bidra med en meny";
}

@Combiner.Js("/Scripts", "knockout-2.2.1.js")

<div id="create-products">
    <h2>Du skapar en meny till @ViewBag.Enterprise</h2>
    <div class="marginB20">
        <p id="helt-text">Vad vill du skapa?</p>
        <div class="btn btn-card" data-action="choose-productType" data-bind="click: setProductType.bind($data, 'drink')" data-id="drink">
            <div data-icon="&#xe008;" class="btn-mega"></div>
            <p class="no-margin">Dryck</p>
        </div>
        <div class="btn btn-card" data-action="choose-productType" data-bind="click: setProductType.bind($data, 'main-dish')" data-id="main-dish">
            <div data-icon="&#xe007;" class="btn-mega"></div>
            <p class="no-margin">Varmrätt</p>
        </div>
        <div class="btn btn-card" data-action="choose-productType" data-bind="click: setProductType.bind($data, 'extra')" data-id="extra">
            <div data-icon="&#xe002;" class="btn-mega"></div>
            <p class="no-margin">Tillbehör</p>
        </div>
    </div>

    <div id="main-dish" class="add-product-form">
        <form data-bind="submit: addProduct">
            <label>Namn</label>
            <input type="text" data-bind='value: Name' required />

            <label>Beskrivning</label>
            <textarea rows="3" placeholder="Ex. Toppad med tomat, ost och skinka" class="input-xxlarge" data-bind='value: Description'></textarea>

            <label>Kategori</label>
            <select data-bind="options:categoriesMainDish, value:SelectedMainDishCategory"></select>
            <input type="text" data-bind="value:categoryToAdd" />
            <a href="javascript:void(0)" data-bind="click:addNewCategoryMainDish">Lägg till kategori<span data-icon="&#xe00c;" class="marginL5"></span></a>

            <label>Pris</label>
            <div class="input-append">
                <input type="number" placeholder="0" class="input-mini" data-bind='value: Price' required /><span class="add-on">kr</span>
            </div>

            <input type="hidden" data-bind='value: ProductType' />
            <div class="col12">
                <div class="row">
                    <button type="submit" class="btn btn-primary">Lägg till produkt</button>
                </div>
            </div>

        </form>
    </div>


    <div id="drink" class="add-product-form">
        <form data-bind="submit: addProduct">
            <label>Namn</label>
            <input type="text" data-bind='value: Name' required />

            <label>Beskrivning</label>
            <textarea rows="3" placeholder="Ex. Bärig smak med inslag av körsbär, vanilj och lakrits" class="input-xxlarge" data-bind='value: Description'></textarea>

            <label>Kategori</label>
            <select data-bind="options:categoriesDrink, value:SelectedDrinkCategory"></select>
            <input type="text" data-bind="value:categoryToAdd" />
            <a href="javascript:void(0)" data-bind="click:addNewCategoryDrink">Lägg till kategori<span data-icon="&#xe00c;" class="marginL5"></span></a>

            <label>Pris</label>
            <div class="input-append">
                <input type="number" placeholder="0" class="input-mini" data-bind='value: Price' required /><span class="add-on">kr</span>
            </div>

            <label>Mängd</label>
            <div class="input-append">
                <input type="number" placeholder="0" class="input-mini" data-bind='value: Size' /><span class="add-on">cl</span>
            </div>

            <label>Alkoholhalt</label>
            <div class="input-append">
                <input type="number" placeholder="0" class="input-mini" data-bind='value: Abv' /><span class="add-on">%</span>
            </div>

            <label>Övrig kommentar</label>
            <input type="text" placeholder="Ex. Pris per flaska 269kr" class="input-large" data-bind='value: AdditionalComment' />

            <input type="hidden" data-bind='value: ProductType' />
            <div class="col12">
                <div class="row">
                    <button type="submit" class="btn btn-primary">Lägg till produkt</button>
                </div>
            </div>
        </form>
    </div>

    <div id="extra" class="add-product-form">
        <form data-bind="submit: addProduct">
            <label>Namn</label>
            <input type="text" data-bind='value: Name' required />

            <label>Beskrivning</label>
            <textarea rows="2" class="input-large" data-bind='value: Description'></textarea>

            <label>Pris</label>
            <div class="input-append">
                <input type="number" placeholder="0" class="input-mini" data-bind='value: Price' required /><span class="add-on">kr</span>
            </div>

            <input type="hidden" data-bind='value: ProductType' />
            <div class="col12">
                <div class="row">
                    <button type="submit" class="btn btn-primary">Lägg till produkt</button>
                </div>
            </div>
        </form>
    </div>

    <div id="edited-menu-container" class="hide">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Namn</th>
                    <th>Beskrivning</th>
                    <th>Pris</th>
                    <th>Kategori</th>
                    <th>Typ</th>
                    <th>Mängd (cl)</th>
                    <th>Alkoholhalt</th>
                    <th>Övrig kommentar</th>
                    <th></th>
                </tr>
            </thead>
            <tbody data-bind="template:{name:templateToUse,foreach:products}">
                <script id="itemsTmpl" type="text/html">
                    <tr>
                        <td data-bind='text: Name'></td>
                        <td data-bind='text: Description'></td>
                        <td data-bind='text: Price'></td>
                        <td data-bind='text: Category'></td>
                        <td>
                            <span data-icon="&#xe008;" data-bind="visible: ProductType() == 'drink'" class="font-xl"></span>
                            <span data-icon="&#xe007;" data-bind="visible: ProductType() == 'main-dish'" class="font-xl"></span>
                            <span data-icon="&#xe002;" data-bind="visible: ProductType() == 'extra'" class="font-xl"></span>
                        </td>
                        <td>
                            <p data-bind="visible: ProductType() == 'drink',text: Size"></p>
                        </td>
                        <td>
                            <p data-bind="visible: ProductType() == 'drink',text: Abv"></p>
                        </td>
                        <td>
                            <p data-bind="visible: ProductType() == 'drink',text: AdditionalComment"></p>
                        </td>
                        <td>
                            <a class="btn btn-light" data-bind="click: $parent.selectItem" href="#" title="edit"><span data-icon="&#xe004;"></span></a>
                            <a class="btn btn-light" data-bind="click: $root.removeProduct" href="#" title="remove"><span data-icon="&#xe009;"></span></a>
                        </td>
                    </tr>
                </script>

                <script id="editTmpl" type="text/html">
                    <tr data-bind="with: $root.itemForEditing">
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td></td>
                        <td>
                            <form>
                                <div class="onerow">
                                    <label>Namn</label>
                                    <input type="text" data-bind="value: Name" />
                                    <span data-icon="&#xe008;" data-bind="visible: ProductType() == 'drink'" class="font-xl"></span>
                                    <span data-icon="&#xe007;" data-bind="visible: ProductType() == 'main-dish'" class="font-xl"></span>
                                    <span data-icon="&#xe002;" data-bind="visible: ProductType() == 'extra'" class="font-xl"></span>
                                    <label>Beskrivning</label>
                                    <textarea rows="3" placeholder="Ex. Härligt rödvin från södra Italien" class="input-xxlarge" data-bind='value: Description'></textarea>
                                    <label data-bind="visible: ProductType() != 'extra'">Kategori</label>
                                    <input type="text" data-bind="visible: ProductType() != 'extra',value: Category" />
                                    <label>Pris</label>
                                    <input type="text" data-bind="value: Price" class="input-mini" />

                                    <div data-bind="visible: ProductType() == 'drink'">
                                        <label>Mängd</label>
                                        <input type="text" data-bind="value: Size" class="input-mini" />
                                        <label>Alkoholhalt</label>
                                        <input type="text" data-bind="value: Abv" class="input-mini" />
                                        <label>Övrig kommentar</label>
                                        <input type="text" data-bind="value: AdditionalComment" />
                                    </div>
                                </div>
                                <a class="btn btn-success" data-bind="click: $root.acceptItem" href="#" title="save"><span data-icon="&#xe005;"></span></a>
                                <a class="btn btn-light" data-bind="click: $root.revertItem" href="#" title="cancel"><span data-icon="&#xe006;"></span></a>
                            </form>
                        </td>

                    </tr>
                </script>
            </tbody>
        </table>

        <div class="onerow marginB20">Jag bekräftar att informationen stämmer<input id="cb-confirm" type="checkbox" />
            <p id="cb-not-confirmed" class="error no-margin hide">Du måste bekräfta</p>

        </div>
        
        <button data-bind="click: save, enable: products().length > 1" class="btn btn-warning">Spara menyn</button>
    </div>
</div>


<div id="products-created-success" class="hide">
    <h1>Tack för hjälpen!</h1>
    <p>Dina ändringar är på väg att godkännas av en moderator, för att sedan publiceras!</p>
</div>
<div id="loading"></div>

<script>
    var firstClicked = false;
    $('[data-action="choose-productType"]').click(function () {
        var productType = $(this).attr("data-id");
        $(".add-product-form").removeClass("active");
        $("#" + productType).addClass("active");
        $('[data-action="choose-productType"]').removeClass("active");
        $(this).addClass("active");
        if(!firstClicked) {
            firstClicked = true;
            $("#helt-text").hide();
            $("#edited-menu-container").removeClass("hide");
        }
    });

    var Product = function (data) {
        this.Name = ko.observable();
        this.Description = ko.observable();
        this.Price = ko.observable();
        this.Category = ko.observable();
        this.ProductType = ko.observable();
        this.Size = ko.observable();
        this.Abv = ko.observable();
        this.AdditionalComment = ko.observable();

        this.update(data);
    };

    //can pass fresh data to this function at anytime to apply updates or revert to a prior version
    Product.prototype.update = function(data) { 
        this.Name(data.Name);
        this.Description(data.Description);
        this.Price(data.Price);
        this.Category(data.Category);
        this.ProductType(data.ProductType);
        this.Size(data.Size);
        this.Abv(data.Abv);
        this.AdditionalComment(data.AdditionalComment);
    };

    var MenuViewModel = function (products) {
        var self = this;

        //turn the raw items into Item objects
        self.products = ko.observableArray(ko.utils.arrayMap(products, function(data) {
            return new Product(data);
        }));

        self.Name = ko.observable();
        self.Description = ko.observable();
        self.Price = ko.observable();
        self.Category = ko.observable();
        self.ProductType = ko.observable("main-dish");
        self.Size = ko.observable();
        self.Abv = ko.observable();
        self.AdditionalComment = ko.observable();

        self.SelectedDrinkCategory = ko.observable();
        self.SelectedMainDishCategory = ko.observable();

        self.categoryToAdd = ko.observable();
        self.categoriesMainDish = ko.observableArray(["Pasta","Pizza","Vegetariskt","Kycklingrätter","Sallad"]);
        self.categoriesDrink = ko.observableArray(["Läsk","Röda viner","Vita viner","Öl"]);

        //hold the currently selected item
        self.selectedItem = ko.observable();
        //make edits to a copy
        self.itemForEditing = ko.observable();
        self.selectItem = self.selectItem.bind(self);
        self.acceptItem = self.acceptItem.bind(self);
        self.revertItem = self.revertItem.bind(self);


        self.addProduct = function () {
            if(self.ProductType() == "drink")
                self.Category(self.SelectedDrinkCategory());
            else if(self.ProductType() == "main-dish")
                self.Category(self.SelectedMainDishCategory());

            var product = new Object({
                Name:self.Name(),
                Description:self.Description(),
                Price:self.Price(),
                Category:self.Category(),
                ProductType:self.ProductType(),
                Size:self.Size(),
                Abv:self.Abv(),
                AdditionalComment:self.AdditionalComment()
            });

            var p = new Product(product);
            self.products.push(p);
            
            self.Name("");
            self.Description("");
            self.Category("");
            self.Price("");
            self.Size("");
            self.Abv("");
            self.AdditionalComment("");
            $(".add-product-form.active input:first").focus();
        };

        self.setProductType = function (ProductType) {
            self.ProductType(ProductType);
        };

        self.removeProduct = function (product) {
            self.products.remove(product);
        };


        self.templateToUse = function (item) {
            return self.selectedItem() === item ? 'editTmpl' : 'itemsTmpl';
        };
        self.addNewCategoryMainDish = function() {
            if(self.categoryToAdd().length > 1){
                self.categoriesMainDish.push(self.categoryToAdd());
                self.categoryToAdd("");
            }
        };
        
        self.addNewCategoryDrink = function() {
            if(self.categoryToAdd().length > 1){
                self.categoriesDrink.push(self.categoryToAdd());
                self.categoryToAdd("");
            }
        };
        

        
        self.save = function () {
            var cbConfirmed = $("#cb-confirm").is(':checked');
            if(cbConfirmed) {
                $("#create-products").hide();
                $("#loading").show();
                $.ajax({
                    url: "/Manage/SaveProducts",
                    data: ko.toJSON({ products: self.products, enterpriseId: '@ViewBag.EnterpriseId' }),
                    type: "post",
                    contentType: "application/json",
                    success: function () {
                        $("#products-created-success").show();
                        $("#loading").hide();
                    }
                }); 
            }
            else {
                $("#cb-not-confirmed").show();
            }
        };
    };


    ko.utils.extend(MenuViewModel.prototype, {
        //select an item and make a copy of it for editing
        selectItem: function(item) {
            this.selectedItem(item);
            this.itemForEditing(new Product(ko.toJS(item)));
        },
    
        acceptItem: function() {
            var selected = this.selectedItem(),
                edited = ko.toJS(this.itemForEditing()); //clean copy of edited
        
            //apply updates from the edited item to the selected item
            selected.update(edited);
        
            //clear selected item
            this.selectedItem(null);
            this.itemForEditing(null);
        },
    
        //just throw away the edited item and clear the selected observables
        revertItem: function() {
            this.selectedItem(null);
            this.itemForEditing(null);
        }
    });


    var serverModel = @Html.Raw(Json.Encode(ViewBag.Products));  
    
    if(serverModel != null) {
        if(serverModel.length > 0) {
            $("#helt-text").hide();
            $("#edited-menu-container").removeClass("hide");
            firstClicked = true;
        }
    }

    ko.applyBindings(new MenuViewModel(serverModel));

</script>




@{
    ViewBag.Title = "Skapa en meny";
}
<style>
    .add-product-form {
        display: none;
    }

        .add-product-form.active {
            display: block;
        }
</style>
<script src="~/Scripts/knockout-2.2.1.js"></script>

<div id="create-products">
    <h2>Du skapar meny till @ViewBag.Enterprise</h2>

    <div class="btn-group">
        <button class="btn productType-choose" data-bind="click: setProductType.bind($data, 'drink')" data-id="drink">Dryck</button>
        <button class="btn productType-choose" data-bind="click: setProductType.bind($data, 'main-dish')" data-id="main-dish">Varmrätt</button>
        <button class="btn productType-choose" data-bind="click: setProductType.bind($data, 'extra')" data-id="extra">Tillbehör</button>
    </div>

    <div id="main-dish" class="add-product-form active">
        <form data-bind="submit: addProduct">
            <fieldset>
                <legend>Varmrätt</legend>
                <label>Namn</label>
                <input type="text" data-bind='value: Name' required />

                <label>Beskrivning</label>
                <textarea rows="3" placeholder="Ex. Toppad med tomat, ost och skinka. Glutenfri." class="input-xxlarge" data-bind='value: Description'></textarea>

                <label>Kategori</label>
                <select data-bind="options:categoriesMainDish, value:SelectedMainDishCategory"></select>
                <input type="text" data-bind="value:categoryToAdd" />
                <a href="javascript:void(0)" data-bind="click:addNewCategoryMainDish">Lägg till kategori<i class="icon-plus"></i></a>

                <label>Pris</label>
                <div class="input-append">
                    <input type="number" placeholder="0" class="input-mini" data-bind='value: Price' required /><span class="add-on">kr</span>
                </div>

                <input type="hidden" data-bind='value: ProductType' />
                <div class="span12">
                    <div class="row">
                        <button type="submit" class="btn btn-primary">Lägg till produkt</button>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>


    <div id="drink" class="add-product-form">
        <form data-bind="submit: addProduct">
            <fieldset>
                <legend>Dryck</legend>
                <label>Namn</label>
                <input type="text" data-bind='value: Name' required />

                <label>Beskrivning</label>
                <textarea rows="3" placeholder="Ex. Härligt rödvin från södra Italien" class="input-xxlarge" data-bind='value: Description'></textarea>

                <label>Kategori</label>
                <select data-bind="options:categoriesDrink, value:SelectedDrinkCategory"></select>
                <input type="text" data-bind="value:categoryToAdd" />
                <a href="javascript:void(0)" data-bind="click:addNewCategoryDrink">Lägg till kategori<i class="icon-plus"></i></a>

                <label>Pris</label>
                <div class="input-append">
                    <input type="number" class="input-mini" data-bind='value: Price' required /><span class="add-on">kr</span>
                </div>

                <label>Mängd</label>
                <div class="input-append">
                    <input type="number" class="input-mini" data-bind='value: Size' /><span class="add-on">cl</span>
                </div>

                <label>Alkoholhalt</label>
                <div class="input-append">
                    <input type="number" class="input-mini" data-bind='value: Abv' /><span class="add-on">%</span>
                </div>

                <label>Övrig kommentar</label>
                <input type="text" placeholder="Ex. Pris per flaska 269kr" class="input-large" data-bind='value: AdditionalComment' />

                <input type="hidden" data-bind='value: ProductType' />
                <div class="span12">
                    <div class="row">
                        <button type="submit" class="btn btn-primary">Lägg till produkt</button>
                    </div>
                </div>
            </fieldset>
        </form>
    </div>
    
    
    <table class="table table-bordered table-striped">
        <thead>
            <tr>
                <th>Namn</th>
                <th>Beskrivning</th>
                <th>Pris</th>
                <th>Kategori</th>
                <th>Typ</th>
                <th>Mängd (cl)</th>
                <th>Alkoholhalt</th>
                <th>Övrig kommentar</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-bind="template:{name:templateToUse,foreach:products}">
            <script id="itemsTmpl" type="text/html">
                <tr>
                    <td data-bind='text: Name'></td>
                    <td data-bind='text: Description'></td>
                    <td data-bind='text: Price'></td>
                    <td data-bind='text: Category'></td>
                    <td data-bind='text: ProductType'></td>
                    <td><p data-bind="visible: ProductType() == 'drink',text: Size"></p></td>
                    <td><p data-bind="visible: ProductType() == 'drink',text: Abv"></p></td>
                    <td><p data-bind="visible: ProductType() == 'drink',text: AdditionalComment"></p></td>
                    <td>
                        <a class="btn" data-bind="click: $parent.selectItem" href="#" title="edit"><i class="icon-edit"></i></a>
                        <a class="btn" data-bind="click: $root.removeProduct" href="#" title="remove"><i class="icon-remove"></i></a>
                    </td>
                </tr>
            </script>

            <script id="editTmpl" type="text/html">
                <tr data-bind="with: $root.itemForEditing">
                    <td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td>
                    <td>
                        <form>
                            <label>Namn</label>
                            <input type="text" data-bind="value: Name" />
                            <label>Beskrivning</label>
                            <textarea rows="3" placeholder="Ex. Härligt rödvin från södra Italien" class="input-xxlarge" data-bind='value: Description'></textarea>
                            <label>Kategori</label>
                            <input type="text" data-bind="value: Category" />
                            <label>Pris</label>
                            <input type="text" data-bind="value: Price" class="input-mini"/>
                            <label>Typ</label>
                            <p data-bind="text: ProductType"></p>
                            <div data-bind="visible: ProductType() == 'drink'">
                                <label>Mängd</label>
                                <input type="text" data-bind="value: Size" class="input-mini" />
                                <label>Alkoholhalt</label>
                                <input type="text" data-bind="value: Abv" class="input-mini" />
                                <label>Övrig kommentar</label>
                                <input type="text"  data-bind="value: AdditionalComment" />
                            </div>
                            <a class="btn btn-success" data-bind="click: $root.acceptItem" href="#" title="save"><i class="icon-ok"></i></a>
                            <a class="btn" data-bind="click: $root.revertItem" href="#" title="cancel"><i class="icon-trash"></i></a>
                        </form>
                    </td>
                    
                </tr>
            </script>
        </tbody>
    </table>


    <button data-bind="click: save, enable: products().length > 0" class="btn btn-info">Spara menyn</button>
</div>


<div id="products-created-success" class="hide">
    <h1>Tack för hjälpen!</h1>
    <p>Dina ändringar är på väg att godkännas av en moderator, för att sedan publiceras!</p>
</div>
<div id="loading" class="hide">
    <p>Laddar....</p>
</div>

<script>
    $(".productType-choose").click(function () {
        var productType = $(this).attr("data-id");
        $(".add-product-form").removeClass("active");
        $("#" + productType).addClass("active");
    });

    var Product = function (data) {
        this.Name = ko.observable();
        this.Description = ko.observable();
        this.Price = ko.observable();
        this.Category = ko.observable();
        this.ProductType = ko.observable();
        this.Size = ko.observable();
        this.Abv = ko.observable();
        this.AdditionalComment = ko.observable();

        this.update(data);
    };

    //can pass fresh data to this function at anytime to apply updates or revert to a prior version
    Product.prototype.update = function(data) { 
        this.Name(data.Name);
        this.Description(data.Description);
        this.Price(data.Price);
        this.Category(data.Category);
        this.ProductType(data.ProductType);
        this.Size(data.Size);
        this.Abv(data.Abv);
        this.AdditionalComment(data.AdditionalComment);
    };

    var MenuViewModel = function (products) {
        var self = this;

        //turn the raw items into Item objects
        self.products = ko.observableArray(ko.utils.arrayMap(products, function(data) {
            return new Product(data);
        }));

        self.Name = ko.observable();
        self.Description = ko.observable();
        self.Price = ko.observable();
        self.Category = ko.observable();
        self.ProductType = ko.observable("main-dish");
        self.Size = ko.observable();
        self.Abv = ko.observable();
        self.AdditionalComment = ko.observable();

        self.SelectedDrinkCategory = ko.observable();
        self.SelectedMainDishCategory = ko.observable();

        self.categoryToAdd = ko.observable();
        self.categoriesMainDish = ko.observableArray(["Pizza", "Pasta", "Sallad"]);
        self.categoriesDrink = ko.observableArray(["Läsk", "Vitt vin", "Öl"]);

        //hold the currently selected item
        self.selectedItem = ko.observable();
        //make edits to a copy
        self.itemForEditing = ko.observable();
        self.selectItem = self.selectItem.bind(self);
        self.acceptItem = self.acceptItem.bind(self);
        self.revertItem = self.revertItem.bind(self);


        self.addProduct = function () {
            if(self.ProductType() == "drink")
                self.Category(self.SelectedDrinkCategory());
            else if(self.ProductType() == "main-dish")
                self.Category(self.SelectedMainDishCategory());

            var product = new Object({
                Name:self.Name(),
                Description:self.Description(),
                Price:self.Price(),
                Category:self.Category(),
                ProductType:self.ProductType(),
                Size:self.Size(),
                Abv:self.Abv(),
                AdditionalComment:self.AdditionalComment()
            });

            var p = new Product(product);
            self.products.push(p);
            
            self.Name("");
            self.Description("");
            self.Category("");
            self.Price("");
            self.Size("");
            self.Abv("");
            self.AdditionalComment("");
            $(".add-product-form.active input:first").focus();
        };

        self.setProductType = function (ProductType) {
            self.ProductType(ProductType);
        };

        self.removeProduct = function (product) {
            self.products.remove(product);
        };


        self.templateToUse = function (item) {
            return self.selectedItem() === item ? 'editTmpl' : 'itemsTmpl';
        };
        self.addNewCategoryMainDish = function() {
            if(self.categoryToAdd().length > 1){
                self.categoriesMainDish.push(self.categoryToAdd());
                self.categoryToAdd("");
            }
        };
        
        self.addNewCategoryDrink = function() {
            if(self.categoryToAdd().length > 1){
                self.categoriesDrink.push(self.categoryToAdd());
                self.categoryToAdd("");
            }
        };
        

        
        self.save = function () {
            $("#create-products").hide();
            $("#loading").show();
            $.ajax({
                url: "/Manage/SaveProducts",
                data: ko.toJSON({ products: self.products, enterpriseId: '@ViewBag.EnterpriseId' }),
                type: "post",
                contentType: "application/json",
                success: function () {
                    $("#products-created-success").show();
                    $("#loading").hide();
                }
            });
        };
    };


    ko.utils.extend(MenuViewModel.prototype, {
        //select an item and make a copy of it for editing
        selectItem: function(item) {
            this.selectedItem(item);
            this.itemForEditing(new Product(ko.toJS(item)));
        },
    
        acceptItem: function() {
            var selected = this.selectedItem(),
                edited = ko.toJS(this.itemForEditing()); //clean copy of edited
        
            //apply updates from the edited item to the selected item
            selected.update(edited);
        
            //clear selected item
            this.selectedItem(null);
            this.itemForEditing(null);
        },
    
        //just throw away the edited item and clear the selected observables
        revertItem: function() {
            this.selectedItem(null);
            this.itemForEditing(null);
        }
    });


    var serverModel = @Html.Raw(Json.Encode(ViewBag.Products));  

    ko.applyBindings(new MenuViewModel(serverModel));

</script>



